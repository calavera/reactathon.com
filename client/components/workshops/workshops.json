[
  {
    "id": "1",
    "name": "ES.next Fundamentals",
    "brief": "Learn how to write cleaner code using arrow functions, destructuring, rest parameters, and other ES.next features to improve your developer speed, functionality, and maintainability.",
    "description": "JavaScript is evolving quickly. The mega ES6 specification was released in 2015 and is quickly being implemented by modern JS interpreters. New versions of ECMAScript will now be released on a yearly basis with new features going through a 4-stage proposal process. We can leverage features in ES6, ES2016, and those slated for future versions right now to write even clearer and more concise React code. Experience with JavaScript will help you get the most out of this hands-on workshop, but you don’t have to have a JavaScript black belt to leave feeling confident in 'ES.next.' Learn how to write cleaner code using arrow functions, destructuring, rest parameters, and other ES.next features you’re likely to use and benefit from on a daily basis while developing with React. Oh, and don’t worry if you didn’t understand any of those terms — you soon will after this workshop.",
    "instructor": "Ben Ilegbodu",
    "img": "ben",
    "title": "Lead Front-end Engineer",
    "company": "Eventbrite",
    "bio": "Ben is a Christian, a husband and a father of 2 with 10+ years of experience developing user interfaces for the Web. He currently leads and manages Eventbrite’s Frontend Platform team. On the side, Ben also enjoys playing basketball, DIY, watching movies, and blogging. He blogs at (benmvp.com) and tweets (@benmvp) about his experiences with new web technologies.",
    "date": "March 7",
    "length": 3,
    "difficulty": "BEGINNER",
    "location": ""
  },
  {
    "id": "2",
    "headerImage": "./workshop_images/intro-react.png",
    "name": "Intro to React",
    "brief": "Learn the basics of building Composable UIs in React, by building a real-world application to explore best practices styling, testing, and managing data inside React Components. ",
    "description": "Learn the basics of building Composable UIs in React, by building a real-world application to explore best practices styling, testing, and managing data inside React Components. ",
    "instructor": "Brian Douglas",
    "img": "brian",
    "title": "Senior Engineer",
    "company": "Netlify",
    "bio": "Brian is a developer at Netlify, where he was first hired to convert their Angular app to React. Since then he has been working heavily on multiple React apps using Redux, GraphQL/Relay, and a variety of solutions for styling. In his spare time, he mentors new programmers towards contributing in open source as well as JavaScript and React tools.",
    "date": "March 7",
    "length": 5,
    "difficulty": "BEGINNER",
    "location": ""
  },
  {
    "id": "3",
    "name": "Integrate Redux into your React App",
    "brief": "Simplify your state management and application scalability with the most popular implementation of the Flux architecture, Redux. Learn Redux as we integrate it into a full-stack application boilerplate.",
    "description": "Simplify your state management and application scalability with the most popular implementation of the Flux architecture, Redux. Learn Redux as we integrate it into a full-stack application boilerplate. You'll learn the skills and best practices necessary to integrate Redux into your app, as we integrate Redux into a full-stack e-commerce React app.",
    "instructor": "Berkeley Martinez",
    "img": "berks",
    "title": "CTO",
    "company": "freeCodeCamp",
    "bio": "Berkeley is the CTO of freecodecamp.com, a free online community for learning full-stack web development where students garner real-world experience by engineering solutions for nonprofit companies. He has been programming with React for over three years, and is the author of Redux-Epic, a library built to do better async and server-side rendering in React with RxJS Observables. He is also a partner at Real World React, where he consults individuals and businesses looking to become experts in the React ecosystem.",
    "date": "March 8",
    "length": 8,
    "difficulty": "INTERMEDIATE",
    "location": ""
  },
  {
    "id": "4",
    "name": "Webpacking",
    "brief": "Set yourself apart and take control of the most popular module bundler for React apps - Webpack. While others struggle to reconfigure their boilerplate code, you'll be writing custom solutions to be ahead of the game.",
    "description": "With all the buzzwords flying around the Javascript/React ecosystem, today one that still can't shake intimidation is \"Webpack\". Some of us have just grabbed an example configuration to get our app running or used its' middleware in conjunction with some \"legacy\" build tools. But most of us haven't really take time to understand why it's emerging as the dominant build tool for modular Javascript applications. In this workshop we are going shed that intimidation and unlock the power of Webpack. By the time you leave, you should feel comfortable building and understanding the basics of a Webpack configuration and iterating on it, unlocking more features as your application demands.",
    "instructor": "Muhsin Abdul-Musawwir",
    "img": "moose",
    "title": "Front-end Engineer",
    "company": "Esurance",
    "bio": "Muhsin \"Moose\" is a Front End Engineer at Esurance Working in React and Node. He has a passion for tooling, workflows, awesome build pipelines, and learning/teaching new technologies.",
    "date": "March 9",
    "length": 4,
    "difficulty": "INTERMEDIATE",
    "location": ""
  },
  {
    "id": "5",
    "name": "Serverless Apps with AWS Lambda & React",
    "brief": "git push heroku master was a great leap forward in web development. But serverless apps take it a whole step further. Learn how to deploy full-stack apps with AWS Lambda and React from a lead software engineer at Serverless.",
    "description": "git push heroku master was a great leap forward in web development. But serverless apps take it a whole step further. Learn how to deploy full-stack apps with AWS Lambda and React from a lead software engineer at Serverless.",
    "instructor": "David Wells",
    "img": "david",
    "title": "Software Engineer",
    "company": "Serverless",
    "bio": "David is a full stack developer at Serverless, Inc. in San Francisco. He is passionate about developer experience and creating products that are powerful and easy to use. His previous roles include lead UI/UX developer at Mulesoft and founder of Inbound Now, an open source marketing software platform. He specialized in JavaScript, HTML, CSS, Marketing, and UI/UX",
    "date": "March 9",
    "length": 4,
    "difficulty": "INTERMEDIATE",
    "location": ""
  },
  {
    "id": "6",
    "name": "Intro to React Native",
    "brief": "Take your knowledge of React mobile. Learn to build a native mobile app for both Android & iOS as you learn from a React Native core-contributor.",
    "description": "Take your knowledge of React mobile. Learn to build a native mobile app for both Android & iOS as you learn from a React Native core-contributor.",
    "instructor": "Mike Grabowski",
    "img": "mike",
    "title": "CTO",
    "company": "Callstack.io",
    "bio": "Mike is the CTO and head of open source at Callstack.io, where they build professional native apps for clients utilizing React and React Native. He is a React Native core-contributor.",
    "date": "March 10",
    "length": 8,
    "difficulty": "INTERMEDIATE",
    "location": ""
  },
  {
    "id": "7",
    "name": "RxJS & Redux-Observable",
    "brief": "Take your React & Redux apps to the next level. Learn to perform asynchronous data-fetching and server-side rendering, among other benefits, with RxJS Observables.",
    "description": "RxJS & Redux-Observable provide: Complex side-effects and asynchronous data-fetching, Declarative AJAX cancellation, Debounced or throttled form submissions, Isolate redux side effects into easily testable and idempotent functions, and Improved server-side rendering developer experience. This is thanks in large part to observables. Observables are similar to promises with a few key improvements. With observables, you get: Success, failure, and completion event streams, Apply familiar array methods to event handlers, Composable event handlers, Return any number of values over any amount of time, Declarative cancellation, Laziness -- they won't do anything until you subscribe to them.",
    "instructor": "Berkeley Martinez",
    "img": "berks",
    "title": "CTO",
    "company": "freeCodeCamp",
    "bio": "Berkeley is the CTO of freecodecamp.com, a free online community for learning full-stack web development where students garner real-world experience by engineering solutions for nonprofit companies. He has been programming with React for over three years, and is the author of Redux-Epic, a library built to do better async and server-side rendering in React with RxJS Observables. He is also a partner at Real World React, where he consults individuals and businesses looking to become experts in the React ecosystem.",
    "date": "March 10",
    "length": 8,
    "difficulty": "ADVANCED",
    "location": ""
  }
]
